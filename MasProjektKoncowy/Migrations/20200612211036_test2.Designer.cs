// <auto-generated />
using System;
using MasProjektKoncowy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MasProjektKoncowy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200612211036_test2")]
    partial class test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MasProjektKoncowy.Models.Klient", b =>
                {
                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.HasKey("OsobaId");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Osoba", b =>
                {
                    b.Property<int>("OsobaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Haslo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("OsobaId");

                    b.ToTable("Osoby");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Pracownik", b =>
                {
                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataZatrudnienia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataZwolnienia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numer")
                        .HasColumnType("int")
                        .HasMaxLength(40);

                    b.Property<double>("Pensja")
                        .HasColumnType("float");

                    b.Property<string>("Specjalizacja")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("OsobaId");

                    b.ToTable("Pracowniki");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pracownik");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.ProgramistaProjekt_asoc", b =>
                {
                    b.Property<int>("ProgramistaProjektId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.HasKey("ProgramistaProjektId");

                    b.HasIndex("OsobaId");

                    b.HasIndex("ProjektId");

                    b.ToTable("ProgramistaProjekt_asoc");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Projekt", b =>
                {
                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Numer")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<string>("TypProjektu")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProjektId");

                    b.HasIndex("OsobaId");

                    b.ToTable("Projekty");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Projekt");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.TesterkoduProjekt_asoc", b =>
                {
                    b.Property<int>("TesterkoduProjektId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<int>("ProjektId")
                        .HasColumnType("int");

                    b.HasKey("TesterkoduProjektId");

                    b.HasIndex("OsobaId");

                    b.HasIndex("ProjektId");

                    b.ToTable("TesterkoduProjekt_asoc");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Zamowienie", b =>
                {
                    b.Property<int>("ZamowienieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int>("OsobaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanowyTerminRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TerminZrealizowany")
                        .HasColumnType("datetime2");

                    b.HasKey("ZamowienieId");

                    b.HasIndex("OsobaId");

                    b.ToTable("Zamowienia");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Konsultant", b =>
                {
                    b.HasBaseType("MasProjektKoncowy.Models.Pracownik");

                    b.HasDiscriminator().HasValue("Konsultant");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Menedzer", b =>
                {
                    b.HasBaseType("MasProjektKoncowy.Models.Pracownik");

                    b.HasDiscriminator().HasValue("Menedzer");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Programista", b =>
                {
                    b.HasBaseType("MasProjektKoncowy.Models.Pracownik");

                    b.HasDiscriminator().HasValue("Programista");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.TesterKodu", b =>
                {
                    b.HasBaseType("MasProjektKoncowy.Models.Pracownik");

                    b.HasDiscriminator().HasValue("TesterKodu");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.AplikacjaBazodanowa", b =>
                {
                    b.HasBaseType("MasProjektKoncowy.Models.Projekt");

                    b.Property<string>("TypBazy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasDiscriminator().HasValue("AplikacjaBazodanowa");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.AplikacjaKomputerowa", b =>
                {
                    b.HasBaseType("MasProjektKoncowy.Models.Projekt");

                    b.Property<string>("TypSystemu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AplikacjaKomputerowa");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.AplikacjaMobilna", b =>
                {
                    b.HasBaseType("MasProjektKoncowy.Models.Projekt");

                    b.Property<string>("TypAplikacji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AplikacjaMobilna");
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Klient", b =>
                {
                    b.HasOne("MasProjektKoncowy.Models.Osoba", null)
                        .WithOne("Klient")
                        .HasForeignKey("MasProjektKoncowy.Models.Klient", "OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Pracownik", b =>
                {
                    b.HasOne("MasProjektKoncowy.Models.Osoba", null)
                        .WithOne("Pracownik")
                        .HasForeignKey("MasProjektKoncowy.Models.Pracownik", "OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.ProgramistaProjekt_asoc", b =>
                {
                    b.HasOne("MasProjektKoncowy.Models.Programista", "Programista")
                        .WithMany("ProgramistaProjekt_Asocs")
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MasProjektKoncowy.Models.Projekt", "Projekt")
                        .WithMany("ProgramistaProjekt_Asocs")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Projekt", b =>
                {
                    b.HasOne("MasProjektKoncowy.Models.Menedzer", "Menedzer")
                        .WithMany("Projekty")
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MasProjektKoncowy.Models.Zamowienie", null)
                        .WithOne("Projekt")
                        .HasForeignKey("MasProjektKoncowy.Models.Projekt", "ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.TesterkoduProjekt_asoc", b =>
                {
                    b.HasOne("MasProjektKoncowy.Models.TesterKodu", "TesterKodu")
                        .WithMany("TesterkoduProjekt_Asocs")
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MasProjektKoncowy.Models.Projekt", "Projekt")
                        .WithMany("TesterkoduProjekt_Asocs")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MasProjektKoncowy.Models.Zamowienie", b =>
                {
                    b.HasOne("MasProjektKoncowy.Models.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
